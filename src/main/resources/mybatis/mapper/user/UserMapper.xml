<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neusoft.stage_work.dao.userDao">
    <!--新增用户-->
    <insert id="saveUser" parameterType="com.neusoft.stage_work.entity.userInfo">
        insert into t_sys_user
            (id,
            account,
            user_name,
            sex,
            phone,
            email,
            id_card,
            pwd,
            is_deleted,
            sort_no,
            gmt_create,
            create_by,
            gmt_modified,
            last_modified_by,
            version
            )
        values
           (#{id},
            #{account},
            #{userName},
            #{sex},
            #{phone},
            #{email},
            #{idCard},
            #{pwd},
            #{isDeleted},
            #{sortNo},
            now(),
            #{createBy},
            now(),
            #{createBy},
            #{version})
    </insert>

    <!--查询数据表数据条数-->
    <select id="countUser" parameterType="com.neusoft.stage_work.entity.countUserInfo" resultType="int">
        select count(*) from ${tableName}
    </select>

    <!--用户表修改-->
    <update id="modifyUser" parameterType="com.neusoft.stage_work.entity.userInfo">
        update t_sys_user set
            account=#{account},
            user_name=#{userName},
            sex=#{sex},
            phone=#{phone},
            email=#{email},
            id_card=#{idCard},
            pwd=#{pwd},
            gmt_modified=now(),
            last_modified_by=#{userName}
        where id=#{id}
    </update>

    <!--用户表删除-->
    <update id="deleteUser" parameterType="com.neusoft.stage_work.entity.userInfo">
        update t_sys_user set
            is_deleted=1
        where id=#{id}
    </update>

    <!--用户表查询-->
    <select id="queryUser" parameterType="com.neusoft.stage_work.entity.userInfo" resultType="com.neusoft.stage_work.entity.userInfo">
        select * from t_sys_user where
            id like if(isnull(#{id}),"%",#{id})
        and account like if(isnull(#{account}),"%",#{account})
        and user_name like if(isnull(#{userName}),"%",#{userName})
        and sex like if(isnull(#{sex}),"%",#{sex})
        and phone like if(isnull(#{phone}),"%",#{phone})
        and email like if(isnull(#{email}),"%",#{email})
        and id_card like if(isnull(#{idCard}),"%",#{idCard})
        and pwd like if(isnull(#{pwd}),"%",#{pwd})
    </select>

    <!--新增用户角色中间表-->
    <insert id="saveUserRole" parameterType="com.neusoft.stage_work.entity.userRoleInfo">
        insert into t_sys_user_role
            (id,
            user_id,
            role_id,
            is_deleted,
            sort_no,
            gmt_create,
            create_by,
            gmt_modified,
            last_modified_by,
            version
            )
        values
           (#{id},
            #{userId},
            #{roleId},
            #{isDeleted},
            #{sortNo},
            now(),
            #{createBy},
            now(),
            #{createBy},
            #{version})
    </insert>

    <!--用户角色中间表修改-->
    <update id="modifyUserRole" parameterType="com.neusoft.stage_work.entity.userRoleInfo">
        update t_sys_user_role set
            user_id=#{userId},
            role_id=#{roleId},
            gmt_modified=now(),
            last_modified_by=#{userId}
        where id=#{id}
    </update>

    <!--用户角色中间表删除-->
    <update id="deleteUserRole" parameterType="com.neusoft.stage_work.entity.userRoleInfo">
        update t_sys_user_role set
            is_deleted=1
        where id=#{id}
    </update>

    <!--用户角色中间表查询-->
    <select id="queryUserRole" parameterType="com.neusoft.stage_work.entity.userRoleInfo" resultType="com.neusoft.stage_work.entity.userRoleInfo">
        select * from t_sys_user_role where
            id like if(isnull(#{id}),"%",#{id})
        and user_id like if(isnull(#{userId}),"%",#{userId})
        and role_id like if(isnull(#{roleId}),"%",#{roleId})
    </select>

    <!--修改角色-->
    <update id="modifyRole" parameterType="com.neusoft.stage_work.entity.roleInfo">
        update t_sys_role set
            role_name=#{roleName},
            gmt_modified=now(),
            last_modified_by="admin"
        where id=#{id}
    </update>

    <!--删除角色-->
    <update id="deleteRole" parameterType="com.neusoft.stage_work.entity.roleInfo">
        update t_sys_role set
            is_deleted=1
        where id=#{id}
    </update>

    <!--查询角色-->
    <insert id="saveRole" parameterType="com.neusoft.stage_work.entity.roleInfo">
        insert into t_sys_role
            (id,
            role_name,
            is_deleted,
            sort_no,
            gmt_create,
            create_by,
            gmt_modified,
            last_modified_by,
            version
            )
        values
           (#{id},
            #{roleName},
            #{isDeleted},
            #{sortNo},
            now(),
            #{createBy},
            now(),
            #{createBy},
            #{version})
    </insert>

    <!--查询所有用户及其对应角色-->
    <select id="queryAll" resultType="com.neusoft.stage_work.entity.userInfo">
        select tu.id,account,user_name,sex,phone,email,id_card,pwd,role_name from t_sys_user tu
	        LEFT JOIN t_sys_user_role tur on tu.id=tur.user_id
	        LEFT JOIN t_sys_role tr on tr.id=tur.role_id
    </select>

    <!--角色表查询-->
    <select id="queryRole" parameterType="com.neusoft.stage_work.entity.roleInfo" resultType="com.neusoft.stage_work.entity.roleInfo">
        select * from t_sys_role where
            id like if(isnull(#{id}),"%",#{id})
        and role_name like if(isnull(#{roleName}),"%",#{roleName})
    </select>
</mapper>